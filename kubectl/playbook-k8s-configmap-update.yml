# Example of checking for ConfigMap existence so that create or replace can be used
#
# ansible-playbook playbook-k8s-configmap-update.yml --connection=local
#
---
- hosts: localhost
  connection: local

  tasks:

  - command: kubectl get nodes

  - name: does configmap exist?
    command: kubectl describe configmap test1
    failed_when: not configmap_res.rc in [0,1]
    register: configmap_res

  - name: show configmap results, 0=found,1=not found
    debug:
      msg: "{{configmap_res.rc}}"

  - name: kubectl to create new configmap
    command: kubectl create configmap test1 --from-file=ConfigMap-test1.yaml
    when: configmap_res.rc != 0

  - name: kubectl to update existing configmap
    shell: 'kubectl create configmap test1 --from-file=ConfigMap-test1.yaml -o yaml --dry-run | kubectl replace -f -'
    when: configmap_res.rc == 0

  - name: show final configmap
    command: kubectl describe ConfigMap test1
    register: final_output

  - debug:
      msg: "{{final_output.stdout_lines}}"
 

